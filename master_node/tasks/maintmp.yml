---
# tasks file for k8s_master
- name: installing docker 
  package:
    name: docker
    state: present

- name: Update docker driver to systemd
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json

- name: Start and Enable docker
  service:
    name: docker
    state: started
    enabled: yes


- name: Configure yum for kubernetes on Amazon Linux2
  yum_repository:
    name: kubernetes
    description: Yum repo for Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    gpgcheck: no
  register: kuberepo   

- name: Install kubelet, kubeadm and kubectl packages
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl


- name: installing iproute-tc
  package:
    name:
    - iproute-tc
    state: present


- name: enabling docker and kubelet service
  service:
    name: "{{ item }}"  
    state: started
    enabled: yes
  loop:
    - kubelet
    - docker
- name: pulling all images
  shell: kubeadm config images pull

- name: Edit /etc/sysctl.conf file
  lineinfile:
    dest: /etc/sysctl.conf
    line: "net.bridge.bridge-nf-call-iptables = 1"  

- name: copying content of the daemon.json file
  copy:
    dest: /etc/docker/daemon.json
    src:  daemon.json

- name: restarting docker services
  service:
    name: docker
    state: restarted

- name: copying k8s conf file
  copy:
    dest: /etc/sysctl.d/k8s.conf
    src: k8s.conf
- name: refreshing sysctl
  shell: "sysctl --system"  

- name: initializing  kubeadm service
  shell: "kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint={{ control_plane_endpoint_ip }}:6443  --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: yes   

- name: Creating the directory
  file:
    name: "$HOME/.kube"
    state: directory
    
- name: Copy conf file
  command: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
  ignore_errors: yes
- name: Doing some required thing
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: Copy kube-flannel.yml to master node
  get_url:
    url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    dest: $HOME/kube-flannel.yml

- name: Set network in the $HOME/kube-flannel.yml file
  lineinfile:
    path: $HOME/kube-flannel.yml
    regexp: '\"Network\":*'
    line: "      \"Network\": \"{{ pod_network_cidr }}\","
 
- name: Install CNI (Flannel)
  command: kubectl apply -f $HOME/kube-flannel.yml

- name: Generate join command
  shell: "kubeadm token create --print-join-command"
  register: join

- name: debugging
  debug:
    var: join.stdout
